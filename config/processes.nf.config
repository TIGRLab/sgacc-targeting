repo = "/scratch/smansour/scripts/sgacc-dev/"
scripts = "${repo}/scripts"

cache_dir = "/projects/smansour/TMS2022/sub-CMP002/tms_pipeline_test/sgacc_targeting_scratch/"

process {

    withLabel: fieldopt {
        container ="${params.fieldopt}"
        containerOptions = "-B ${scripts}:/scripts" }

    withLabel: connectome {
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "/archive/code/containers/CONNECTOME_WORKBENCH/connectome_workbench_v1.0-2019-06-05-bbdb3be76afe.simg"
        beforeScript = "export SINGULARITYENV_OMP_NUM_THREADS=1"
    }

    withLabel: ciftify { 
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "${params.ciftify_img}"
        beforeScript = "export SINGULARITYENV_OMP_NUM_THREADS=1"
    }

    withLabel: bin{
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "/archive/code/containers/BOONSTIM/fieldopt_master-2021-10-08-bf1e8ce8678c.simg"
        beforeScript = "export SINGULARITYENV_OMP_NUM_THREADS=1"
        containerOptions = "-B ${scripts}:/scripts"
    }

    withName: seed_corr {
        storeDir = "${cache_dir}/seed_corr"
    }

    withName: threshold_corr {
        storeDir = "${cache_dir}/threshold_corr"
    }

    withName: find_clusters {
        storeDir = "${cache_dir}/find_clusters"
    }

    withName: target_selection {
        storeDir = "${cache_dir}/target_selection"
    }

    withName: apply_mask {
        storeDir = "${cache_dir}/apply_mask"
    }
}
