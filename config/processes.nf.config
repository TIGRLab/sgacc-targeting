repo = "${params.sgacc_workflow_directory}"
scripts_dir = "${repo}/scripts"

cache_dir = "${params.cache_dir}"

process {

    withLabel: fieldopt {
        container ="${params.fieldopt}"
        containerOptions = "-B ${scripts_dir}:/scripts" }

    withLabel: connectome {
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "/archive/code/containers/CONNECTOME_WORKBENCH/connectome_workbench_v1.0-2019-06-05-bbdb3be76afe.simg"
        beforeScript = "export SINGULARITYENV_OMP_NUM_THREADS=1"
    }

    withLabel: ciftify { 
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "${params.ciftify}"
        beforeScript = "export SINGULARITYENV_OMP_NUM_THREADS=1"
    }

    withLabel: bin{
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "/archive/code/containers/BOONSTIM/fieldopt_master-2021-10-08-bf1e8ce8678c.simg"
        beforeScript = "export SINGULARITYENV_OMP_NUM_THREADS=1"
        containerOptions = "-B ${scripts_dir}:/scripts"
    }

    withName: seed_corr {
        storeDir = "${params.cache_dir}/seed_corr"
    }

    withName: threshold_corr {
        storeDir = "${params.cache_dir}/threshold_corr"
    }

    withName: find_clusters {
        storeDir = "${params.cache_dir}/find_clusters"
    }

    withName: target_selection {
        storeDir = "${params.cache_dir}/target_selection"
    }

    withName: apply_mask {
        storeDir = "${params.cache_dir}/apply_mask"
    }

    withName: mask_corr {
        storeDir = "${cache_dir}/mask_corr"
    }

    withName: mask_sulcal {
        storeDir = "${cache_dir}/mask_sulcal"
    }

    withName: seed_corr_back_project {
        storeDir = "${cache_dir}/seed_corr_back_project"
    }

    withName: average_corr_maps {
        storeDir = "${cache_dir}/average_corr_maps"
    }

    withName: avg_corr_map {
        storeDir = "${cache_dir}/avg_corr_map"
    }

    withName: avg_back_project {
        storeDir = "${cache_dir}/avg_back_project"
    }

    withName: remove_subcortical {
        storeDir = "${cache_dir}/remove_subcortical"
    }

    withName: crop_corr {
        storeDir = "${cache_dir}/crop_corr"
    }

    withName: crop_clusters {
        storeDir = "${cache_dir}/crop_clusters"
    }
}
